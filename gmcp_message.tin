#event {IAC SB GMCP gmcp_msgs IAC SE} {
	#var GMCPMSGS {%0};
	#regex {$GMCPMSGS[text]} {{.*}\\n$} {
		#var GMCPMSGS[text] {&1};
	};
	#switch {"$GMCPMSGS[type]"} {
		#case {"comm"} {
			#replace {GMCPMSGS[text]} {\\n} {};
			#sh {$GMCPMSGS[text]};
			topchat_add_static $GMCPMSGS[text];
		};
		#case {"emotes"} {
			#replace {GMCPMSGS[text]} {\\n} {};
			#sh {$GMCPMSGS[text]};
		};
		#case {"notification.mail"} {Highlights_post $GMCPMSGS[text]};
		#case {"notification.knowledge"} {Highlights_knowledge $GMCPMSGS[text]};
		#case {"room.exits"} {
			#replace {GMCPMSGS[text]} {\\n} {};			
			#sh {$GMCPMSGS[text]};
			#line substitute {variables} {#line strip {#var current_room_exits {$GMCPMSGS[text]}}};
#nop DEBUG;	#line substitute {variables} {#line strip {#var gmcp_exits {$GMCPMSGS[text]}}};
			#if {$MAPPER_SYNC == 0} {findme};
		    BottomBarTinyFugue;
		    #if {$discovery == 1} {
		    	/disc;
		    };
		};
		#case {"room.short"} {
			#var tmptext {$GMCPMSGS[text]};
			#regex {$tmptext} {{.*}\\n$} {
				#var GMCPMSGS[text] {&1};
				#var outputtext {&1};
			} {
				#var outputtext {$tmptext};
			};
			#replace {outputtext} {\\n} {};
#nop DEBUG;	#line substitute {variables} {#line strip {
				#var gmcp_short {$outputtext};
			}};
			#if {$bind_found > 0} {
				SplitWingMap_LabelBind $bind_run;
			};
			#sh {$outputtext};
			#line strip {#var temp_short {$outputtext}};
			#line substitute {variables} {
				#if {$ROOM_INFO[map][x] > 0} {} {#line strip {#var current_room_short_desc {$outputtext}}};
			};
			#if {$MAPPER_SYNC == 0} {findme};
			#if {$trytomove > 0} {
        		#var trytomove 0;
			    #map get roomvnum roomId;
    		};
			#nop SplitWingMap_LabelMap <128>$current_room_short_desc;
		};
		#case {"combat.team"} {
			#var outputtext {$GMCPMSGS[text]};
			#replace {outputtext} {\\n} {};
			#sh $outputtext;
		};
		#case {"combat.others"} {
			#var outputtext {$GMCPMSGS[text]};
			#replace {outputtext} {\\n} {};
			#sh $outputtext;
		};
		#case {"combat.avatar"} {
			#var outputtext {$GMCPMSGS[text]};
			#replace {outputtext} {\\n} {};
			#sh $outputtext;
			#delay {wwalce} {#sh {Odsapnales po walce.}} {30};
			/a rot;
			#line sub variables {
				#delay {$voom} {
					#map at {$voom} {/d};
				} {600};
			};

		};	
		#default {#sh $GMCPMSGS[text]};
	};		
};
