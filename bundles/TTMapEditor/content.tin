#nop #################################################################################;
#nop Edycja map;
#nop #################################################################################;
#alias {/reconnect} {
    #line substitute {variables} {#brain {#port zap $brainId}};
    TTMapEditorAddress;
} {1};

#alias {/reload} {
    #line substitute {variables} {#brain {#port send $brainId {RELOAD}}};
} {1};

#alias {/mapka} {/help TTMapEditor} {1};

#alias {TTMapEditorAddress} {
    #var tmp {$ConfigManager_Configs[TTMapEditorAddress]};
    #replace tmp {,} {;};
    #list connstr create {$tmp};
    #unvar tmp;
    #if {"$connstr[1]" != ""} {
        #if {"$connstr[2]" != ""} {
            #delay {1} {
                #echo {%s} {<158>TTMapEditor: Probing $connstr[1] @ $connstr[2]};
                #brain #port call {$connstr[1]} {$connstr[2]};
            };
            #delay {1.5} {
                #line substitute variables {
                    #brain #var mapkaId $mapkaId;
                };
            }
        };
    };
};

#brain #action {<PORT> MCREATE %1 %2} {
    #line substitute {variables} {
        #rpg #map at {%1} {#map dig %2};
    };
} {1};

#brain #action {<PORT> MARK %d %w} {
    #line substitute {variables} {
        #rpg #map at {%1} {#map set roomweight $roominfo[%2][index]};
        #if {"$roominfo[%2][symbol]" != ""} {
            #rpg #map at {%1} {#map set roomsymbol $roominfo[%2][symbol]};
        } {
            #rpg #map at {%1} {#map set roomsymbol;};
        };
        #if {"$roominfo[%2][command]" != ""} {
            #rpg #map at {%1} {#map set roomarea $roominfo[%2][command]};            
        };
    };
} {1};

#brain #action {<PORT> DEL %1 %2} {
    #line substitute {variables} {
        #rpg #map at {%1} {#map del %2};
    };
} {1};

#brain #action {<PORT> NOTE %1 %2 %*} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #nop echo {PORT NOTE %1 %2 %3};
            #map get roomdata vroomdata;
            #list vroomdata size vroomdatasize;

            #format timeStamp {%t} {%d%m%y %r};
            #var roomdatavalue[author] %2;
            #var roomdatavalue[stamp] $timeStamp;
            #var roomdatavalue[message] {%3};
            #var roomdatavalue[type] {test};

            #if {$vroomdatasize > 0} {
                #math vr {$vroomdatasize + 1};
                #list vroomdata add {{$roomdatavalue}};
            } {
                #list vroomdata create;
                #list vroomdata add {{$roomdatavalue}};
            };
            #map set roomdata $vroomdata;
            #map set roomnote {data};
        };
    };
} {1};

#brain #action {<PORT> BIND %1 %2 %3 %*} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #map get roomdata vroomdata;
            #list vroomdata size vroomdatasize;

            #format timeStamp {%t} {%d%m%y %r};
            #var roomdatavalue[author] %2;
            #var roomdatavalue[stamp] $timeStamp;
            #var roomdatavalue[message] {%4};
            #var roomdatavalue[type] {command};
            #var roomdatavalue[macrokey] {%3};

            #if {$vroomdatasize < 1} {
                #list vroomdata create;
                #list vroomdata add {{$roomdatavalue}};             
            } {
                #var searchforbind 0;
                #foreach {*vroomdata[]} {vr} {
                    #if {"$vroomdata[$vr][type]" == "command"} {
                        #if {"$vroomdata[$vr][macrokey]" == "%3"} {
                            #var vroomdata[$vr][message] {%4};
                            #var roomdatavalue[author] %2;
                            #var roomdatavalue[stamp] $timeStamp;
                            #var searchforbind 1;
                        };
                    };
                };
                #if {$searchforbind < 1} {
                    #math vr {$vroomdatasize + 1};
                    #list vroomdata add {{$roomdatavalue}};             
                };
            };
            #map set roomdata $vroomdata;
            #map set roomnote {data};
        };
    };
} {1};

#brain #action {<PORT> EVENT %d %*} {
    #line substitute {variables} {
        #rpg #map at {%1} {#map set roomsymbol {<168>@<088>}};
        #rpg #map at {%1} {#map set roomarea {QB %2}};
    };
} {1};

#brain #action {<PORT> UNEVENT %d} {
    #line substitute {variables} {
        #rpg #map at {%1} {#map set roomsymbol};
        #rpg #map at {%1} {#map set roomarea};
    };
} {1};

#brain #action {<PORT> COMMAND %d %*} {
    #line substitute {variables} {
        #rpg #map at {%1} {#map set roomsymbol {<138>E<088>}};
        #rpg #map at {%1} {#map set roomarea {%2}};
    };
} {1};


#brain #action {<PORT> ROOMSHORT %d %*} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #map get roomsymbol vroomsymbol;
            #map set roomdesc {%2};
            #if {"$vroomsymbol" == "<faa>?<088>"} {
                #map set roomsymbol {};
            };
        };
    };
};

#brain #action {<PORT> ROOMEXITS %d %*} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #map set roomname {%2};
            #map get roomcolor vroomcolor;
            #if {"$vroomcolor" == "<faa>"} {
                #map set roomcolor {};
            };
        };
    };
};

#brain #action {<PORT> HIDE %d %w} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #line substitute variables {
                #map exitflag %2 hide on;
                #map exit %2 color <138>;
            };
        };
    };
}

#brain #action {<PORT> UNHIDE %d %w} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #line substitute variables {
                #map exitflag %2 hide off;
                #map exit %2 color;
            };
        };
    };
};

#brain #action {<PORT> LINKB %d %w %d} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #line substitute variables {
                #map link %2 %3 both;
            };
        };
    };
};

#brain #action {<PORT> UNLINKB %d %w} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #line substitute variables {
                #map unlink %2 both;            
            };
        };
    };
};

#brain #action {<PORT> TERRAIN %d %*} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #line substitute variables {
                #map set roomterrain %2;
            };
        };
    };
} {1};

#brain #action {<PORT> LINK %d %w %d} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #line substitute variables {
                #map link %2 %3;
            };
        };
    };
};

#brain #action {<PORT> UNLINK %d %w} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #line substitute variables {
                #map unlink %2;         
            };
        };
    };
};

#brain #action {<PORT> SPECIAL %d %w} {
    #line sub {variables} {
        #rpg #map at {%1} {
            #map exit %2 color <118>;
        };
    };
};

#brain #action {<PORT> LONG %d %w} {
    #line sub {variables} {
        #rpg #map at {%1} {
            #line substitute variables {#map insert %2 void};
        };
    };
};

#brain #action {<PORT> SHORT %d %w} {
    #line sub {variables} {
        #rpg #map at {%1} {
            #line substitute variables {#map uninsert %2 void};
        };
    };
};

#brain #action {<PORT> VOID %d} {
    #line sub {variables} {
        #rpg #map at {%1} {
            #line substitute variables {#map roomflag void on};
        };
    };
};


#brain #action {<PORT> MEXIT %d %w %d %*} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #map exit %2 command {%4};
            #map exit %2 color <118>;
            #map link {%4} %3;
        };
    };
};

#brain #action {<PORT> COLOR %d %S} {
    #var tmpsymbol {%2};
    #replace {tmpsymbol} {-} {<};
    #replace {tmpsymbol} {+} {>};
    #line substitute {variables} {
        #rpg #map at {%1} {#map set roomcolor {$tmpsymbol}};
    };
};

#brain #action {<PORT> ROOMCOLOR %d %*} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #map set roomcolor <%2>;
            #map set roomsymbol {};

            #var rc <%2>;
            #map get roomexits re;
            #foreach {*re[]} {_re} {
                #switch {"$_re"} {
                    #case {"e"} {#map exit e color $rc};
                    #case {"n"} {#map exit n color $rc};
                    #case {"w"} {#map exit w color $rc};
                    #case {"s"} {#map exit s color $rc};
                    #case {"ne"} {#map exit ne color $rc};
                    #case {"nw"} {#map exit nw color $rc};
                    #case {"se"} {#map exit se color $rc};
                    #case {"sw"} {#map exit sw color $rc};
                };
            };
        };
    };
};

#brain #action {<PORT> EXITCOLOR %d %w %*} {
    #line substitute {variables} {
        #rpg #map at {%1} {
            #map exit %2 color <%3>;
        };
    };
};


#brain #action {<PORT> Connection made to %S.} {
    #rpg {
        #var charStatus {o};
        #echo {%s} {<158>TTMapEditor: <118>Connected.};
    };
    #line substitute {variables} {
        #rpg #var brainId %1;
    };
};

#brain #action {<PORT> CHECKSUM %d} {
    #line substitute {variables} {
        #rpg {
            #map at {1} {#map get roomdata tmprd};
            #if {"$tmprd" == "%1"} {
                #echo {%s} {<158>TTMapEditor: <128>Maps are in sync, writing is enabled!};
                #var PONGED 2;
            } {
                #echo {%s} {<158>TTMapEditor: <138>Maps are not in sync, writing is disabled!};
                #var PONGED 1;
            };
        };
    };
}

#alias {show_ponged_error} {
    #echo {%s} {<158>TTMapEditor: <118>You are not connected!<088>};
};

#alias {show_ponged_error2} {
    #echo {%s} {<158>TTMapEditor: <138>Read-only mode: Please pull the latest map.<088>};
};

#alias {/disc$} {
    #if {$PONGED == 2} {
        #map get roomvnum voom;
        #map get roomterrain rter;
        #line substitute {variables} {#brain {#port send $brainId {ROOMEXITS $voom $current_room_exits}}};
        #line substitute {variables} {#brain {#port send $brainId {ROOMSHORT $voom $current_room_short_desc}}};
    } {show_ponged_error2};
} {1};

#alias {/ter} {
    #map get roomvnum voom;
    #if {$PONGED == 2} {
            #line substitute {variables} {#brain {#port send $brainId {TERRAIN $voom %1}}};
    } {show_ponged_error2};
} {1};

#alias {/map roomcolor} {
    #map get roomvnum voom;
    #if {$PONGED == 2} {
            #line substitute {variables} {#brain {#port send $brainId {ROOMCOLOR $voom %1}}};
    } {show_ponged_error2};
} {1};

#alias {/map exitcolor} {
    #map get roomvnum voom;
    #if {$PONGED == 2} {
            #line substitute {variables} {#brain {#port send $brainId {EXITCOLOR $voom %1 %2}}};
    } {show_ponged_error2};
} {1};

#alias {/map link %w %d} {
    #if {$PONGED == 2} {
    #map get roomvnum voom;
    #line substitute {variables} {#brain {#port send $brainId {LINK $voom %1 %2}}};
    } {show_ponged_error2};
} {1};

#alias {/map linkb %w %d} {
    #if {$PONGED == 2} {
    #map get roomvnum voom;
    #line substitute {variables} {#brain {#port send $brainId {LINKB $voom %1 %2}}};
    } {show_ponged_error2};
} {1};

#alias {/map unlinkb %w} {
    #if {$PONGED == 2} {
    #map get roomvnum voom;
    #line substitute {variables} {#brain {#port send $brainId {UNLINKB $voom %1}}};
    } {show_ponged_error2};
} {1};

#alias {/map unlink %w} {
    #if {$PONGED == 2} {
    #map get roomvnum voom;
    #line substitute {variables} {#brain {#port send $brainId {UNLINK $voom %1}}};
    } {show_ponged_error2};
} {1};

#alias {/map hide %w} {
    #if {$PONGED == 2} {
    #map get roomvnum voom;
    #line substitute {variables} {#brain {#port send $brainId {HIDE $voom %1}}};
    } {show_ponged_error2};
} {1};

#alias {/map unhide %w} {
    #if {$PONGED == 2} {
    #map get roomvnum voom;
    #line substitute {variables} {#brain {#port send $brainId {UNHIDE $voom %1}}};
    } {show_ponged_error2};
} {1};

#alias {/map dig %w} {
    #if {$PONGED == 2} {
    #map get roomvnum v;
    #line substitute {variables} {#brain {#port send $brainId {MCREATE $v %1}}};
    } {show_ponged_error2};
} {1};

#alias {/mark as %w$} {
    #if {$PONGED == 2} {

    #switch {"%1"} {
        #case {"vendor"} {};
        #case {"checkpoint"} {};
        #case {"water"} {};
        #case {"bank"} {};
        #case {"post"} {};
        #case {"safe"} {};
        #case {"food"} {};
        #case {"quest"} {};
        #case {"info"} {};
        #case {"danger"} {};
     	#case {"port"} {};
    	#case {"herb"} {};
    	#case {"trap"} {};
    	#case {"smith"} {};
     	#case {"training"} {};
    	#case {"knowledge"} {};
    	#case {"storage"} {};
        #case {"forest"} {};
        #case {"field"} {};
        #case {"beach"} {};
        #case {"river"} {};
        #case {"1"} {};
        #case {"bush"} {};
        #case {"swamp"} {};
        #case {"lava"} {};
        #case {"mountain"} {};
        #case {"desert"} {};
        #case {"road"} {};
        #case {"graveyard"} {};

        #default {
            #echo {%s} {Niedozwolona wartosc: %1};
            #return;
        };
    }
    #map get roomvnum v;
    #line substitute {variables} {#brain {#port send $brainId {MARK $v %1}}};
    } {show_ponged_error2};
} {1};

#alias {/map del %w} {
    #if {$PONGED == 2} {
    #map get roomvnum v;
    #line substitute {variables} {#brain {#port send $brainId {DEL $v %1}}};
    } {show_ponged_error2};
} {1};

#alias {/map wyj %w %*} {
    #if {$PONGED == 2} {
    #map get roomvnum v;
    #line substitute {variables} {#brain {#port send $brainId {MEXIT $v %1 %2}}};
    } {show_ponged_error2};
} {1};

#alias {/map spe %w} {
    #if {$PONGED == 2} {
    #map get roomvnum v;
    #line sub {variables} {#brain {#port send $brainId {SPECIAL $v %1}};};
    } {show_ponged_error2};
} {1};


#alias {/map void} {
    #if {$PONGED == 2} {
        #map get roomvnum v;
        #line sub {variables} {#brain {#port send $brainId {VOID $v}}};
    } {show_ponged_error2};
} {1};

#alias {/map long %w} {
    #if {$PONGED == 2} {
        #map get roomvnum v;
        #line sub {variables} {#brain {#port send $brainId {LONG $v %1}}};
    } {show_ponged_error2};
} {1};

#alias {/map short %w} {
    #if {$PONGED == 2} {
        #map get roomvnum v;
        #line sub {variables} {#brain {#port send $brainId {SHORT $v %1}}};
    } {show_ponged_error2};
} {1};


#alias {/n %*} {
    #if {$PONGED == 2} {
        #map get roomvnum v;
        #line substitute {variables} {#brain {#port send $brainId {NOTE $voom $AVATAR_NAME %1}}};
        #nop echo {#brain {#port send $brainId {NOTE $voom $AVATAR_NAME %1}}};
    } {show_ponged_error2};
} {1};

#alias {/nc {F1|F2|F3} %*} {
    #if {$PONGED == 2} {
        #map get roomvnum v;
        #line substitute {variables} {#brain {#port send $brainId {BIND $voom $AVATAR_NAME %1 %2}}};
        #nop echo {#brain {#port send $brainId {NOTE $voom $AVATAR_NAME %1}}};
    } {show_ponged_error2};
} {1};

#alias {/s$} {
    #unvar checkpoints;
    #var cpcmd 1;
    #map list {roomnote} {data} {variable} {checkpoints};
    #echo {alias dystans pokoj ktododal};
    #echo {-------------------------------};
    #foreach {*checkpoints[]} {vcpv} {
        #math vcpvcheck {0};
        #math vcpvcheck {($vcpvcheck + $checkpoints[$vcpv][distance]) / 2 - 3};

        #map at {$vcpv} {
            #map get roomdata RDtable;
        };

        #if {$vcpvcheck < 100} {
            #replace {RDtable[$rdv][message]} {%1} {<138>%1<028>};
            #echo {%-6s %-6s %+5s %s %s %s} {idz$cpcmd} {$vcpvcheck} {$vcpv} {<178>$RDtable[$rdv][author]<088>} {$RDtable[$rdv][stamp]} {<028>$RDtable[$rdv][message]};
        };

    #if {$vcpvcheck < 10} {#line substitute variables {#alias {idz$cpcmd} {#map run {$vcpv} {0.5};};};#math {cpcmd} {$cpcmd + 1};};
    #elseif {$vcpvcheck < 50} {#line substitute variables {#alias {idz$cpcmd} {#map run {$vcpv} {1};};};#math {cpcmd} {$cpcmd + 1};};
    #elseif {$vcpvcheck < 100} {#line substitute variables {#alias {idz$cpcmd} {#map run {$vcpv} {2};};};#math {cpcmd} {$cpcmd + 1};};

    };

} {1};

#alias {/s %*} {
    #unvar checkpoints;
    #var cpcmd 1;
    #map list {roomnote} {data} {variable} {checkpoints};
    #echo {alias dystans pokoj ktododal};
    #echo {-------------------------------};
    #foreach {*checkpoints[]} {vcpv} {
        #math vcpvcheck {0};
        #math vcpvcheck {($vcpvcheck + $checkpoints[$vcpv][distance]) / 2 - 3};
        #map at {$vcpv} {
            #map get roomdata RDtable;
        };
        #list RDtable size rdTableSize;

        #if {$rdTableSize > 1} {
            #foreach {*RDtable[]} {rdv} {
                #regex {$RDtable[$rdv][message]} {%1} {
                        #replace {RDtable[$rdv][message]} {%1} {<138>%1<028>};
                        #echo {%-6s %-6s %+5s %s %s %s} {idz$cpcmd} {$vcpvcheck} {$vcpv} {<178>$RDtable[$rdv][author]<088>} {$RDtable[$rdv][stamp]} {<028>$RDtable[$rdv][message]};
                } {
                    #if {"$RDtable[1][message]" == "%1"} {
                        #replace {RDtable[1][message]} {%1} {<138>%1<028>};
                        #echo {%-6s %-6s %+5s %s %s %s} {idz$cpcmd} {$vcpvcheck} {$vcpv} {<178>$RDtable[1][author]<088>} {$RDtable[1][stamp]} {<028>$RDtable[1][message]};                    
                    }
                }
            };
        } {
            #regex {$RDtable[1][message]} {%1} {
                        #map find {$vcpv};
                        #replace {RDtable[1][message]} {%1} {<138>%1<028>};
                        #echo {%-6s %-6s %+5s %s %s %s} {idz$cpcmd} {$vcpvcheck} {$vcpv} {<178>$RDtable[1][author]<088>} {$RDtable[1][stamp]} {<028>$RDtable[1][message]};
            };
        };

        #if {$vcpvcheck < 10} {#line substitute variables {#alias {idz$cpcmd} {#map run {$vcpv} {0.2};};};#math {cpcmd} {$cpcmd + 1};#var pathinprogress 1};
        #elseif {$vcpvcheck < 50} {#line substitute variables {#alias {idz$cpcmd} {#map run {$vcpv} {0.5};};};#math {cpcmd} {$cpcmd + 1};#var pathinprogress 1};
        #elseif {$vcpvcheck < 100} {#line substitute variables {#alias {idz$cpcmd} {#map run {$vcpv} {1};};};#math {cpcmd} {$cpcmd + 1};#var pathinprogress 1};
    };
} {1};

#alias {/event %*} {
    #if {$PONGED == 2} {
        #map get roomvnum tmproomvnum;
        #line substitute {variables} {#brain {#port send $brainId {EVENT $tmproomvnum %1}}};
    } {show_ponged_error};
} {1};

#alias {/unevent} {
    #if {$PONGED == 2} {
        #map get roomvnum tmproomvnum;
        #line substitute {variables} {#brain {#port send $brainId {UNEVENT $tmproomvnum}}};
    } {show_ponged_error};
} {1};

#alias {/command %*} {
    #if {$PONGED == 2} {
        #map get roomvnum tmproomvnum;
        #line substitute {variables} {#brain {#port send $brainId {COMMAND $tmproomvnum %1}}};
    } {show_ponged_error};
} {1};


