#alias {RaidBarDynamicTop} {
    #math global_bundle_slots_values[prompt][bottom] {$ConfigManager_Configs[RaidBarDynamicTop] + 0};

    #if {$global_bundle_slots_values[prompt][bottom] < 1} {
        #var ConfigManager_Configs[RaidBarDynamicTop] {10};
        #var global_bundle_slots_values[prompt][bottom] {10};
    };
    #nop Dependency: SplitRefresh;
    SplitRefreshRequestRefresh;
};

#alias {RaidBarMode} {
    #if {"$ConfigManager_Configs[RaidBarMode]" == "auto"} {
        #ticker {raidbarsize} {
            #screen get SPLIT_BOT_BAR spb;
            #math rbs {$expectedlines + 5};
            #if {$spb != $rbs} {
                /conf RaidBarDynamicTop $rbs;
            };
        } {2};
    } {
        #unticker {raidbarsize};
    };
};

#alias {render_h2} {
    #screen get SPLIT_BOT_BAR sbb;
#if {$sbb > 5} {
    #var a {%0};
    #math tmplinecnt {0 - $global_bundle_slots_values[prompt][bottom]};
  	#loop {-6} {$tmplinecnt} {bubu} {#sh {                                                                                                       } {$bubu}};
  	#var r_curLineCnt {-6};
    #var expectedlines 0;
    #list team_offenders cle;
    #list team_offenders cre;

    #foreach {*duch[]} {du} {#var duch[$du][shown] {0}};
    #list team siz ts;

    #if {$ts < 1} {
        #if {$duch[$avatarid][attack_num] > 0} {
            #list team_offenders add {$duch[$avatarid][attack_num]};
        } {
            #if {$r_curLineCnt >=$tmplinecnt} {
                #sh { $duch[$avatarid][bar][orc]<088>} {$r_curLineCnt} {1} {};
                #math r_curLineCnt {$r_curLineCnt - 1};
                #var duch[$avatarid][shown] {1};
            };
            #math {expectedlines} {$expectedlines + 1};
        };
    }   {
            #foreach {*team[]} {ti} {
                #if {$duch[$team[$ti]][shown] < 1} {
                    #if {$duch[$team[$ti]][attack_num] > 0} {
                        #list team_offenders add $duch[$team[$ti]][attack_num];
                    }   {
                        #if {$r_curLineCnt >= $tmplinecnt} {
                            #sh { $duch[$team[$ti]][bar][orc]<088>} {$r_curLineCnt} {1} {};
                            #math r_curLineCnt {$r_curLineCnt - 1};
                            #var duch[$team[$ti]][shown] {1};
                        };
                        #math {expectedlines} {$expectedlines + 1};
                    };
                };
            };
        };
#nop PRZECIWNICY DRUZYNY LUB AVATARA;
    #foreach {*team_offenders[]} {to} {
        #var tmpnavigator {1};
        #foreach {*duch[]} {ti} {
            #if {$duch[$ti][shown] < 1} {
                #if {"$duch[$ti][attack_num]" == "$team_offenders[$to]"} {
                    #if {$tmpnavigator == 1} {
                        #var tmpnavigator 0;
                        #if {$r_curLineCnt >=$tmplinecnt} {
                            #sh { $duch[$ti][bar][orc]         ${c_stan_niski}*--><088>         $duch[$duch[$ti][attack_num]][bar][orc]<088>    *--> $duch[$duch[$duch[$ti][attack_num]][attack_num]][desc]} {$r_curLineCnt} {1} {};
                            #math r_curLineCnt {$r_curLineCnt - 1};
                            #var duch[$team_offenders[$to]][shown] {1};
                        };
                        #math {expectedlines} {$expectedlines + 1};
                    }   {
                        #if {$r_curLineCnt >=$tmplinecnt} {
                            #math RaidBarCountUsedLines {$RaidBarCountUsedLines + 1};            
                            #sh { $duch[$ti][bar][orc]        ${c_stan_niski}\\<088>} {$r_curLineCnt} {1} {};
                            #math r_curLineCnt {$r_curLineCnt - 1};
                        };
                        #math {expectedlines} {$expectedlines + 1};
                    };
                    #var duch[$ti][shown] {1};
                };
            };
        };  
    };
#nop RESZTA WALCZACYCH WROGOW;
    #foreach {*wrogi[]} {to} {
        #if {$duch[$wrogi[$to]][shown] < 1} {
            #if {$r_curLineCnt >=$tmplinecnt} {
                #sh {                                                          $duch[$wrogi[$to]][bar][orc]<088>    *--> $duch[$duch[$wrogi[$to]][attack_num]][desc]} {$r_curLineCnt} {1} {};
                #math r_curLineCnt {$r_curLineCnt - 1};
                #var duch[$wrogi[$to]][shown] {1};
            };
            #math {expectedlines} {$expectedlines + 1};
        };
    };
#nop WROGOWIE niewalczacy;
    #foreach {*wrogi[]} {wr} {
        #if {$duch[$wrogi[$wr]][shown] < 1} {
            #if {$duch[$wrogi[$wr]][attack_num] > 0} {
                #nop;
            } {
            #nop sh {$duch[$wrogi[$wr]][bar][hug]} {$r_curLineCnt};
                #if {$r_curLineCnt >=$tmplinecnt} {
                    #sh { $duch[$wrogi[$wr]][bar][orc]<088>} {$r_curLineCnt} {$r_curLineCnt} {1} {};
                    #math r_curLineCnt {$r_curLineCnt - 1};
                    #var duch[$wrogi[$wr]][shown] {1};
                };
                #math {expectedlines} {$expectedlines + 1};
            };
        };
    };
#nop RESZTA wszystkiego gdzie shown == 0;
    #foreach {*duch[]} {wr} {
        #if {$duch[$wr][shown] < 1} {
            #if {$r_curLineCnt >=$tmplinecnt} {                
                #sh { $duch[$wr][bar][orc]} {$r_curLineCnt} {1} {};
                #math r_curLineCnt {$r_curLineCnt - 1};
                #var duch[$wr][shown] {1};
            };
            #math {expectedlines} {$expectedlines + 1};
        };
    };


    #draw violet tubed box $tmplinecnt-1 1 $screenrows-4 $screencols;
    #nop sh {$hline} {$tmplinecnt - 1};

    #list duch size lds;
};
};

#con mouse on;
#var topdrag 0

#event {PRESSED MOUSE BUTTON ONE}
{
    #screen get SPLIT_BOT_BAR top;
    #screen get SPLIT_RIGHT_BAR right;
    #screen get cols cols;
    #math curright {$cols - %1 + 1};
    #math curbott {$screenrows - %0};

            #var {o_x} %0;
            #var {o_y} %1;
    #if {$curbott == $top}
    {
        #var topdrag 1
    };

    #if {$right == $curright}
    {
	   #var rightdrag 1
    };
    #if {$curright < $right} {
        #if {$curbott > $top && $o_x > 7} {
            #var mapcenter 1;
            #if {$o_x < 11} {
                #var mapbuttons 1;
            };
        };
    };

    #if {$mapbuttons == 1} {
    #nop czy jest tu lokacyjny button;
        #map get roomarea roomAreaValue;
        #regex {$roomAreaValue} {QB} {
            SplitWingMap_LabelBind_Reverse $bind_run;
            $bind_run;
        };
    };
    #nop sh {curright = $curright | curbott = $curbott | right = $right | top = $top | top: $topdrag right: $rightdrag map: $mapcenter buttons $mapbuttons};
}

#event {RELEASED MOUSE BUTTON ONE}
{
    #var topdrag 0;
    #var rightdrag 0;
    #var mapcenter 0;
    #var mapbuttons 0;
    #regex {$roomAreaValue} {QB} {
        SplitWingMap_LabelBind $bind_run;
    };
    #var roomAreaValue {};
}

#event {MOVED MOUSE BUTTON ONE}
{
    #if {$topdrag}
    {
        #if {%0 < $screenrows} {
            #math curbott {$screenrows - %0};
            /conf RaidBarDynamicTop $curbott;
        }
    }
    #if {$rightdrag}
    {
	#math boooom {$cols - %1};
        /conf SplitWingMapWidth $boooom;
    }
    #if {$mapcenter} {
        #var d_x %0;
        #var d_y %1;
        #math {c_x} {$o_x - $d_x};
        #math {c_y} {$d_y - $o_y};
        #map center $c_y $c_x 0;
    }
}

#event {SCROLLED MOUSE WHEEL UP} {
        #if {%1 == 0 || %1 == 1} {#cursor history prev} {
            #buffer up 1;
        }
}

#event {SCROLLED MOUSE WHEEL DOWN} {
    #if {%1 == 0 || %1 == 1} {#cursor history next} {
        #buffer down 1;
    }
}

#event {MAP DOUBLE-CLICKED MOUSE BUTTON ONE} {
    #map center;
    #map run {%0} {0.25};
    #var pathinprogress 1;
};
