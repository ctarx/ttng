#alias SplitWingMap_Offset {
    #map flag vtmap on;
    #math offsety {$global_bundle_slots_values[prompt][top] + $praidsize + 1};
    #screen get cols screencols;
    #screen get rows screenrows;
    #math offsetx {$screencols - $global_bundle_slots_values[prompt][right] + 2};
    #math offseth {$screencols};
    #math offsetw {$screenrows - $global_bundle_slots_values[prompt][bottom]-1};
    #map offset $offsety $offsetx $offsetw $offseth;

    #nop draw black tubed box $offsety $offsetx-2 $offsetw-1 $offseth-1;
    #nop sh {|} {$offsety} {$offsetx - 3};
};

#alias STARTRAIN {
    #map offset $offsety $offsetx $offsetw $offseth;

    #ticker RAINING {
        #draw blue rain $offsety+1 $offsetx $offsetw-3 $offseth rain 50 80 {.*};
    } {0.5};
}
#alias {SplitWingMapWidth} {
    #var global_bundle_slots_values[prompt][right] $ConfigManager_Configs[SplitWingMapWidth];
    SplitWingMap_Offset;
    RaidBar_refresh;
    #nop Dependency: SplitRefresh;
    SplitRefreshRequestRefresh;
};

#alias {RaidSize} {
    #if {$ConfigManager_Configs[RaidSize] > 0} {
        #var praidsize $ConfigManager_Configs[RaidSize];
    } {
        #var praidsize 5;
    };
    SplitWingMap_Offset;
    RaidBar_refresh;
}

#alias {RaidBar_refresh} {
    #draw circled box 1 $offsetx-1 $praidsize $offseth <088>$raidbartable;
    #line ignore #sh { <bad>manewr: $manewrlevel <bad> rozkaz: <128>rdy<bad> bron: $weaponlevel<088> } {1} {$offsetx + 3};    
}
#event {VARIABLE UPDATED objectnumsRefreshed} {
    RaidBar_refresh
};

#alias {SplitWingMap_refresh} {
    #math global_bundle_slots_values[prompt][right] {$ConfigManager_Configs[SplitWingMapWidth] + 0};

    #if {$global_bundle_slots_values[prompt][right] < 1} {
        #var ConfigManager_Configs[SplitWingMapWidth] {10};
        #var global_bundle_slots_values[prompt][right] {10};
    };
    SplitWingMap_Offset;
    RaidBar_refresh;
};

#alias {SplitWingMap_Popup} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
        #draw violet circled box $offsety+24 $offsetx+3 $offsetw-5 $offseth-3 <088>%0;
    };
};

#alias {SplitWingMap_Journal} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
            #nop                   Y          X        Y + H        X + W            ;      
            #nop draw jeweled box $offsety+34 $offsetx+3 $offsetw-5 $offseth-3 <088>%0;
            #math maxheight { ($offsetw - 5 - $offsety) / 3 };
            #math bot_row {$offsetw - ($offsetw / 5)};
            #draw bottom tile $bot_row $offsetx $offsetw $offseth-3 <088>%0;
    };
};

#alias {SplitWingMap_Journal_1} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
        #draw green circled box $offsetw-2 $offsetx $offsetw $offseth <088>%0;
    };
};

#alias {SplitWingMap_Journal_2} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
        #draw green circled box $offsetw-3 $offsetx $offsetw $offseth <088>%0;
    };
};

#alias {SplitWingMap_Journal_3} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
        #draw green circled box $offsetw-4 $offsetx $offsetw $offseth <088>%0;
    };
};

#alias {SplitWingMap_Journal_4} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
        #draw green circled box $offsetw-5 $offsetx $offsetw $offseth <088>%0;
    };
};

#alias {SplitWingMap_Journal_5} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
        #draw green circled box $offsetw-6 $offsetx $offsetw $offseth <088>%0;
    };
};


#alias {SplitWingMap_Board} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
        #draw jeweled box $offsety+10 $offsetx+3 $offsetw-5 $offseth-3 <088>%0;
    };
};

#alias {SplitWingMap_LabelMap} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
        #draw circled box $offsety+2 $offsetx+3 $offsety+4 $offseth-3 <088>%0<088>;
    };
};

#alias {SplitWingMap_LabelBind} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
        #nop draw green circled box $offsety+5 $offsetx+3 $offsety+7 $offseth-3 <128>BIND LOKACJA: %0;
        #draw green circled box $offsety $offsetx $offsety+2 $offseth <128>BIND LOKACJA: %0;
    };
};

#alias {SplitWingMap_LabelBind_Reverse} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
        #nop draw green circled box $offsety+5 $offsetx+3 $offsety+7 $offseth-3 <128>BIND LOKACJA: %0;
        #draw <AFA> circled box $offsety $offsetx $offsety+2 $offseth <AFA><aaa>BIND LOKACJA: %0;
    };
};

#alias {SplitWingMap_Warning} {
    #if {$ConfigManager_Configs[SplitWingMapWidth] > 20} {
        #draw red tubed box $offsety+9 $offsetx+3 $offsety+11 $offseth-3 <118>%0<088>;
    };
};



#con mouse on;
#var topdrag 0

#event {PRESSED MOUSE BUTTON ONE}
{
    #screen get SPLIT_BOT_BAR top;
    #screen get SPLIT_RIGHT_BAR right;
    #screen get cols cols;
    #math curright {$cols - %1 + 1};
    #math curbott {$screenrows - %0};
    #var {o_x} %0;
    #var {o_y} %1;

    #if {$right == $curright}
    {
       #var rightdrag 1
    };
    #if {$curright < $right} {
        #if {$curbott > $top && $o_x > $global_bundle_slots_values[prompt][top]} {
            #var mapcenter 1;
            #if {$o_x < $global_bundle_slots_values[prompt][top] + 4} {
                #var mapbuttons 1;
            };
        };
    };

    #if {$mapbuttons == 1} {
        #nop czy jest tu lokacyjny button;
        #map get roomarea roomAreaValue;
        #regex {$roomAreaValue} {QB} {
            SplitWingMap_LabelBind_Reverse $bind_run;
            $bind_run;
        };
    };
    #nop sh {curright = $curright | curbott = $curbott | right = $right | top = $top | topdrag: $topdrag rightdrag: $rightdrag map: $mapcenter buttons $mapbuttons | chatdrag: $chatdrag};
}

#event {RELEASED MOUSE BUTTON ONE}
{
    #var topdrag 0;
    #var rightdrag 0;
    #var mapcenter 0;
    #var mapbuttons 0;
    #var chatdrag 0;
    #regex {$roomAreaValue} {QB} {
        SplitWingMap_LabelBind $bind_run;
    };
    #var roomAreaValue {};
}

#event {MOVED MOUSE BUTTON ONE}
{
    #if {$rightdrag}
    {
        #math boooom {$cols - %1};
        /conf SplitWingMapWidth $boooom;
    };
    #if {$mapcenter} {
        #var d_x %0;
        #var d_y %1;
        #math {c_x} {$o_x - $d_x};
        #math {c_y} {$d_y - $o_y};
        #map center $c_y $c_x 0;
    }
}

#event {SCROLLED MOUSE WHEEL UP} {
        #if {%1 == 0 || %1 == 1} {#cursor history prev} {
            #buffer up 1;
        }
}

#event {SCROLLED MOUSE WHEEL DOWN} {
    #if {%1 == 0 || %1 == 1} {#cursor history next} {
        #buffer down 1;
    }
}

#event {MAP DOUBLE-CLICKED MOUSE BUTTON ONE} {
    #map center;
    #map run {%0} {0.25};
    #var pathinprogress 1;
};
