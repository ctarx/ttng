#map read bundles/TTMap/map.map;
#read bundles/TTMapEditor/data.tin;
#map goto 1;
#map at {1} {#map get roomdata MapStampValue};

#nop ACCEPT NEW CONNECTIONS;
#action {<PORT> New connection: %* D%d.} {
	#list userList add {%2};
	#var userDetails[%2][host] {%1};
	serverinfo %2;

#nop SEND DYNAMICS;
	#delay {5} {
    		refresh_dynamics;
    		refresh_beacons;
	};
#nop wyslij checksum;   
    #map at {1} {#map get roomdata vrd};
    #line ignore #sh {<118> Sending checksum to <128>%2<088>};    
    #port send %2 CHECKSUM $vrd;
    #line ignore #sh {<118> Sending Ident Details to <128>%2<088>};
    #port send %2 IDENTREQ %2;
};

#nop ;
#action {<PORT> IDENT }
{

}

#action {<PORT> Closing connection to %* D%d.} {
	#list userList find %2 ulfv;
	#list userList del $ulfv;
};

#alias {broadcast} {
    #line ignore #sh {<128>broadcasting <138> %0<088>};
	#foreach {*userList[]} {user} {#port send $userList[$user] {%0};};
};


#nop #######################################################;
#nop #######################################################;
#nop #######################################################;
#nop #######################################################;


#alias {serverinfo} {
    #map at {1} {#map get roomdata MapStampValue};
	#list userList size uls;
	#port send %0 {INFO: Welcome to the TTMap server.};
	#port send %0 {INFO: Number of active sessions: $uls.};
	#port send %0 {INFO: Map stamp = $MapStampValue};
};

#alias refresh_dynamics {
	#foreach {$drakkary[]} {drakkar} {
 		broadcast LINKB $drakkary[$drakkar][foundat] $drakkary[$drakkar][linkto] $drakkary[$drakkar][id];
    	broadcast MEXIT $drakkary[$drakkar][foundat] $drakkary[$drakkar][linkto] $drakkary[$drakkar][id] wejdz na drakkar;
	};
};
#alias unload_dynamics {
       #map at {$drakkary[demon][foundat]} {#map unlink $drakkary[demon][linkto] both};
       #map at {$drakkary[perla][foundat]} {#map unlink $drakkary[perla][linkto] both};
       #map at {$drakkary[krakken][foundat]} {#map unlink $drakkary[krakken][linkto] both};
       #map at {$drakkary[zwiastun][foundat]} {#map unlink $drakkary[zwiastun][linkto] both};
       #map at {$drakkary[wloczega][foundat]} {#map unlink $drakkary[wloczega][linkto] both};
       
       #map at {$drakkary[demon][foundat]} {#map unlink {wejdz na drakkar} both};
       #map at {$drakkary[perla][foundat]} {#map unlink {wejdz na drakkar} both};
       #map at {$drakkary[krakken][foundat]} {#map unlink {wejdz na drakkar} both};
       #map at {$drakkary[zwiastun][foundat]} {#map unlink {wejdz na drakkar} both};
       #map at {$drakkary[wloczega][foundat]} {#map unlink {wejdz na snekkar} both};
};
#alias load_dynamics {
       #map at {$drakkary[demon][foundat]} {#map link $drakkary[demon][linkto] $drakkary[demon][id] both;};
       #map at {$drakkary[perla][foundat]} {#map link $drakkary[perla][linkto] $drakkary[perla][id] both;};
       #map at {$drakkary[krakken][foundat]} {#map link $drakkary[krakken][linkto] $drakkary[krakken][id] both;};
       #map at {$drakkary[zwiastun][foundat]} {#map link $drakkary[zwiastun][linkto] $drakkary[zwiastun][id] both;};
       #map at {$drakkary[wloczega][foundat]} {#map link $drakkary[wloczega][linkto] $drakkary[wloczega][id] both;};
};

#alias mapsave {
	unload_dynamics;
	#map at {1} {#map get roomdata vroomdata};
	#math vroomdata {$vroomdata + 1};
	#map at {1} {#map set roomdata $vroomdata};
    	#map at {1} {#map get roomdata MapStampValue};
	#map write bundles/TTMap/map.map;
	load_dynamics;
};

#nop ###################################;
#nop tworze pokoj w mapce glownej, zapisuje, wysylam komende wszystkim;
#nop ###################################;
#action {<PORT> MCREATE %d %w} {
	#map at {%1} {#map dig %2};
	broadcast MCREATE %1 %2;
    mapsave;
};

#action {<PORT> DEL %d %w} {
    #map at {%1} {#map del %2};
    broadcast DEL %1 %2;
    mapsave;
};

#action {<PORT> MEXIT %d %w %*} {
    #map goto %1;
    #map exit %2 command {%3};
#nop NEW;  #map exit %2 color <118>;
    #map move %2;
    #map get roomvnum tmproomvnum;
    #map undo;
    #map link {%3} $tmproomvnum;
    broadcast MEXIT %1 %2 $tmproomvnum %3;
    mapsave;
};

#action {<PORT> SPECIAL %d %w} {
    #line sub {variables} {
        #map at {%1} {
            #map exit %2 color <118>;
        };
    };
    broadcast SPECIAL %1 %2;
    mapsave;
};

#action {<PORT> MARK %d %w} {
    #map at {%1} {#map set roomweight $roominfo[%2][index]};
    #map at {%1} {#map get roomterrain rter};

    #if {"$roominfo[%2][symbol]" != ""} {
        #map at {%1} {#map set roomsymbol $roominfo[%2][symbol]};
    } {
        #map at {%1} {#map set roomsymbol;};
    };
    #if {"$roominfo[%2][command]" != ""} {
        #map at {%1} {#map set roomarea $roominfo[%2][command]};            
    };
    
    broadcast MARK %1 %2;
    mapsave;
};

#unaction {%*TER%*};
#action {<PORT> TERRAIN %d %w} {
    #map goto %1;
    #map set roomterrain %2;
    broadcast TERRAIN %1 %2;
    /symbol;
    mapsave;
} {1};

#action {<PORT> HIDE %d %w} {
    #map goto %1;
    #line substitute variables {#map exitflag %2 hide on};
    #map exit %2 color <138>;
    broadcast HIDE %1 %2;
    mapsave;
};

#action {<PORT> LONG %d %w} {
    #map goto %1;
    #line substitute variables {#map insert %2 void};
    broadcast LONG %1 %2;
    mapsave;
};

#action {<PORT> SHORT %d %w} {
    #map goto %1;
    #line substitute variables {#map uninsert %2 void};
    broadcast SHORT %1 %2;
    mapsave;
};

#action {<PORT> VOID %d} {
    #map goto %1;
    #line substitute variables {#map roomflag void on};
    broadcast VOID %1;
    mapsave;
};

#action {<PORT> UNHIDE %d %w} {
    #map goto %1;
    #line substitute variables {#map exitflag %2 hide off};
    #map exit %2 color;
    broadcast UNHIDE %1 %2;
    mapsave;
};

#action {<PORT> NOTE %d %w %*} {
    #map goto %1;
    #map get roomdata vroomdata;
    #list vroomdata size vroomdatasize;

    #format timeStamp {%t} {%d%m%y %r};
    #unvar roomdatavalue;
    #var roomdatavalue[author] {%2};
    #var roomdatavalue[stamp] $timeStamp;
    #var roomdatavalue[message] {%3};
    #var roomdatavalue[type] {test};

    #if {$vroomdatasize > 0} {
        #math vr {$vroomdatasize + 1};
        #list vroomdata add {{$roomdatavalue}};
    } {
        #list vroomdata create;
        #list vroomdata add {{$roomdatavalue}};
    };
    #map set roomdata $vroomdata;
    #map set roomnote {data};

    broadcast NOTE %1 %2 %3;
    mapsave;
} {1};

#action {<PORT> BIND %d %w {F1|F2|F3} %*} {
        #map goto %1;
        #map get roomdata vroomdata;
        #list vroomdata size vroomdatasize;

        #format timeStamp {%t} {%d%m%y %r};
        #var roomdatavalue[author] %2;
        #var roomdatavalue[stamp] $timeStamp;
        #var roomdatavalue[message] {%4};
        #var roomdatavalue[type] {command};
        #var roomdatavalue[macrokey] {%3};

        #if {$vroomdatasize < 1} {
            #list vroomdata create;
            #list vroomdata add {{$roomdatavalue}};             
        } {
            #var searchforbind 0;
            #foreach {*vroomdata[]} {vr} {
                #if {"$vroomdata[$vr][type]" == "command"} {
                    #if {"$vroomdata[$vr][macrokey]" == "%3"} {
                        #var vroomdata[$vr][message] {%4};
                        #var roomdatavalue[author] %2;
                        #var roomdatavalue[stamp] $timeStamp;
                        #var searchforbind 1;
                    };
                };
            };
            #if {$searchforbind < 1} {
                #math vr {$vroomdatasize + 1};
                #list vroomdata add {{$roomdatavalue}};             
            };
        };

        #map set roomdata $vroomdata;
        #map set roomnote {data};
        broadcast BIND %1 %2 %3 %4;
        mapsave;
} {1};

#action {<PORT> ROOMSHORT %d %*} {
    #map goto %1;
    #map set roomdesc {%2};
    #map get roomsymbol vroomsymbol;
    #if {"$vroomsymbol" == "<faa>?<088>"} {
        #map set roomsymbol {};
    };
    broadcast ROOMSHORT %1 %2;
    mapsave;
};

#action {<PORT> ROOMEXITS %d %*} {
    #map goto %1;
    #map set roomname {%2};
    #map get roomcolor vroomcolor;
    #if {"$vroomcolor" == "<faa>"} {
        #map set roomcolor {};
    };
    broadcast ROOMEXITS %1 %2;
    mapsave;
};

#action {<PORT> LINKB %d %w %d} {
    #map at {%1} {
        #line substitute variables {
            #map link %2 %3 both;
        };
    };
    broadcast LINKB %1 %2 %3;
    mapsave;
} {1};

#action {<PORT> UNLINKB %d %w} {
    #map at {%1} {
        #line substitute variables {
            #map unlink %2 both;            
        };
    };
    broadcast UNLINKB %1 %2;
    mapsave;
} {1};

#action {<PORT> LINK %d %w %d} {
    #map at {%1} {
        #line substitute variables {
            #map link %2 %3;
        };
    };
    broadcast LINK %1 %2 %3;
    mapsave;
} {1};

#action {<PORT> UNLINK %d %w'} {
    #map at {%1} {
        #line substitute variables {
            #map unlink %2;         
        };
    };
    broadcast UNLINK %1 %2;
    mapsave;    
} {1};

#action {<PORT> COLOR %d %.} {
    #nop UNCOLOR THE PREVIOUS ROOM IF SET;
    #if {$beacon[%2][roomid] > 0} {
        broadcast COLOR $beacon[%2][roomid] $beacon[%2][oldsym];
    };
    #map at {%1} {#map get roomcolor tmpsymbol};
    #replace {tmpsymbol} {<} {-};
    #replace {tmpsymbol} {>} {+};
    #var beacon[%2][oldsym] {$tmpsymbol};
    #var beacon[%2][roomid] {%1};
    broadcast COLOR %1 $beacon[%2][symbol];
};

#action {<PORT> CLEAR} {
    #foreach {$beacon[]} {bebe} {
	  	#if {$beacon[$bebe][roomid] > 0} {
       	 	broadcast COLOR $beacon[$bebe][roomid] $beacon[$bebe][oldsym];
         	#var beacon[$bebe][roomid] {0};
    	};    
    };
}

#alias {refresh_beacons} {
    #foreach {$beacon[]} {bebe} {
  	#if {$beacon[$bebe][roomid] > 0} {
       	 	broadcast COLOR $beacon[$bebe][roomid] $beacon[$bebe][symbol];
    	};    
    };
}

#nop ###################################;
#nop new event, subscribers' mapevents.tin should be reloaded;
#nop ###################################;
#action {<PORT> EVENT %d %*} {
    broadcast EVENT %1 %2;
    #map at {%1} {#map set roomsymbol {<168>@<088>}};
    #map at {%1} {#map set roomarea {QB %2}};

	broadcast EVENT %1 %2;
    mapsave;
};

#action {<PORT> UNEVENT %d} {
    #map at {%1} {#map set roomsymbol};
    #map at {%1} {#map set roomarea};
    
    broadcast UNEVENT %1;
    mapsave;
} {1};

#action {<PORT> COMMAND %d %*} {
    broadcast COMMAND %1 %2;
    #map at {%1} {#map set roomsymbol {<138>E<088>}};
    #map at {%1} {#map set roomarea {%2}};

	broadcast COMMAND %1 %2;
    mapsave;
};

#action {<PORT> DRAKKAR %d %w} {
    #var tmpdrakkid {$drakkary[%2][id]};
    #var tmpfoundat {$drakkary[%2][foundat]};
    #var tmplinkto {$drakkary[%2][linkto]};

    broadcast ZNALEZIONY $tmpdrakkid $tmpfoundat (%1) $tmplinkto;
    #nop jesli dany drakar byl juz widziany;
    #nop ale gdzie indziej;
    #if {"$tmpfoundat" != "%1"} {
        #if {"$tmpfoundat" != ""} {
    	    #nop odepnij go od mapy;
            #map at {$drakkary[%2][foundat]} {#map unlink $drakkary[%2][linkto] both};
            broadcast UNLINKB $drakkary[%2][foundat] $drakkary[%2][linkto];
            #var drakkary[%2][linkto] {};
        };
    	#nop uaktualnij jego lokacje;
    	#var drakkary[%2][foundat] {%1};
    	#nop znajdz miejsce na cume;
   	    #map at {%1} {
       		#map get roomexits tmproomexits;
       		#map get roomvnum tmproomvnum;
    	};

    	#foreach {$kierunki[]} {kierunek} { 
        		#if {"$tmproomexits[$kierunki[$kierunek]]" == ""} {
           		 	#var drakkary[%2][linkto] {$kierunki[$kierunek]};
           		 	#map at {$drakkary[%2][foundat]} {#map link $drakkary[%2][linkto] $drakkary[%2][id] both;};
            		broadcast LINKB $drakkary[%2][foundat] $drakkary[%2][linkto] $drakkary[%2][id];
        			broadcast MEXIT $drakkary[%2][foundat] $drakkary[%2][linkto] $drakkary[%2][id] wejdz na $drakkary[%2][typ];
    			#break;
    		};
    	};
    };
} {1};

#action {<PORT> CHAT %w %*} {
    broadcast CHAT %1 %2;
};


#alias {/symbol} {
    #var tmpterrain {};
    #var rmsym {};
    #var rmcol {};
    #map get roomterrain tmpterrain;
    #switch {"$tmpterrain"} {
                    #case {"air"}           {#var rmcol <268>;#var rmsym {}};
                    #case {"alley"}         {#var rmcol <248>;#var rmsym <248>. .<088>};
                    #case {"ashen_field"}       {#var rmcol <278>;#var rmsym <278>, `<088>};
                    #case {"areaexit"}      {#var rmcol <168>;#var rmsym <168>[<278>?<168>]<088>};
                    #case {"aylorcity"}     {#var rmcol <278>;#var rmsym <278>[ ]<088>};
        #case {"studnia"}       {#var rmcol <148>;#var rmsym <AAF><178> O <088>};
        #case {"studnia_b"}       {#var rmcol <148>;#var rmsym <AAB><118> O <088>};
        #case {"szczelina"}       {#var rmcol <148>;#var rmsym <G08><118><fca> O <088>};
        
        #case {"plaza"}         {#var rmcol <138>;#var rmsym {}};
                    #case {"bloodyhall"}        {#var rmcol <218>;#var rmsym {}};
                    #case {"bloodyroom"}        {#var rmcol <118>;#var rmsym {}};
                    #case {"bookshelves"}       {#var rmcol <238>;#var rmsym <238>"""<088>};
                    #case {"bookshelves_ns"}    {#var rmcol <238>;#var rmsym <238>=<148>.<238>=<088>};
        #case {"most"}        {#var rmcol <238>;#var rmsym {}};
                    #case {"cabin"}         {#var rmcol <238>;#var rmsym <238># #<088>};
        #case {"jaskinia"}          {#var rmcol <248>;#var rmsym {}};
                    #case {"castle"}        {#var rmcol <178>;#var rmsym <278>###<088>};
        #case {"symbol"}     {#var rmcol <258>;#var rmsym {}};
                    #case {"chessblack"}        {#var rmcol <248>;#var rmsym <248>[ ]<088>};
                    #case {"chesswhite"}        {#var rmcol <178>;#var rmsym <178>[ ]<088>};
                    #case {"city"}          {#var rmcol <278>;#var rmsym <278>. .<088>};
                    #case {"city_underground"}  {#var rmcol <238>;#var rmsym <238>. .<088>};
                    #case {"cloud1"}        {#var rmcol <178>;#var rmsym <178>~ ~<088>};
                    #case {"cloud2"}        {#var rmcol <108>;#var rmsym <108>~ ~<088>};
                    #case {"cloud3"}        {#var rmcol <278>;#var rmsym <128>.<138>*<088>~<088>};
                    #case {"crossroad_ews"}     {#var rmcol <278>;#var rmsym <278>-+-<088>};
                    #case {"crossroad_nw"}      {#var rmcol <278>;#var rmsym <278>-+ <088>};
                    #case {"crossroad_se"}      {#var rmcol <278>;#var rmsym <278> +-<088>};
        #case {"krypta"}         {#var rmcol <248>;#var rmsym {}};
                    #case {"dark"}          {#var rmcol <208>;#var rmsym <208>[ ]<088>};
                    #case {"dead_field"}        {#var rmcol <238>;#var rmsym <238>, `<088>};
                    #case {"dead_forest"}       {#var rmcol <238>;#var rmsym <238>( *<088>};
                    #case {"dead_jungle"}       {#var rmcol <238>;#var rmsym <238>* *<088>};
        #case {"pustynia"}        {#var rmcol <238>;#var rmsym {}};
                    #case {"dungeon"}       {#var rmcol <248>;#var rmsym <248># #<088>};
                    #case {"dustdevil"}     {#var rmcol <238>;#var rmsym <238>.VV<088>};
        #case {"pole"}         {#var rmcol <228>;#var rmsym {}};
        #case {"laka"}        {#var rmcol <228>;#var rmsym {}};
        #nop case {"gaszcz"}        {#var rmcol <228>;#var rmsym <228>, .<088>};
        #case {"zagajnik"}        {#var rmcol <228>;#var rmsym {}};
                    #case {"flowers1"}      {#var rmcol <178>;#var rmsym <168>*<158>*<138>*<088>};
                    #case {"flowers2"}      {#var rmcol <178>;#var rmsym <158>*<168>*<138>*<088>};
        #case {"las"}        {#var rmcol <228>;#var rmsym {}};
        #case {"las_iglasty"}        {#var rmcol <228>;#var rmsym {}};
        #case {"las_bukowy"}        {#var rmcol <228>;#var rmsym {}};    
        #case {"las_sosnowy"}        {#var rmcol <228>;#var rmsym {}};                
                    #case {"fountain"}      {#var rmcol <278>;#var rmsym <278>( )<088>};
        #case {"cmentarz"}     {#var rmcol <238>;#var rmsym {}};
        #case {"korytarz"}       {#var rmcol <268>;#var rmsym {}};
                    #case {"hell1"}         {#var rmcol <218>;#var rmsym <218>` <118>,<088>};
                    #case {"hell2"}         {#var rmcol <218>;#var rmsym <218>~ .<088>};
                    #case {"hell3"}         {#var rmcol <218>;#var rmsym <218>~ <118>^<088>};
                    #case {"hell4"}         {#var rmcol <218>;#var rmsym <118>^ <218>^<088>};
        #case {"oltarz"}      {#var rmcol <218>;#var rmsym {}};
        #case {"lawa"}        {#var rmcol <218>;#var rmsym {}};
        #case {"magma"}       {#var rmcol <018>;#var rmsym {}};
                    #case {"hellhall"}      {#var rmcol <218>;#var rmsym <088>. <218>.<088>};
                    #case {"hellinside"}        {#var rmcol <218>;#var rmsym <218>[ ]<088>};
        #case {"wzgorze"}         {#var rmcol <228>;#var rmsym {}};
                    #case {"hut"}           {#var rmcol <238>;#var rmsym <238>[ ]<088>};
                    #case {"ice"}           {#var rmcol <178>;#var rmsym <178>~ ~<088>};
                    #case {"icehills"}      {#var rmcol <178>;#var rmsym <178>^ ~<088>};
                    #case {"icemount"}      {#var rmcol <178>;#var rmsym <178>A A<088>};
        #case {"wnetrze"}        {#var rmcol <fca>;#var rmsym {}};
                    #case {"insideice"}     {#var rmcol <178>;#var rmsym <178>[ ]<088>};
        #case {"gaszcz"}        {#var rmcol <228>;#var rmsym {}};
                    #case {"lightning"}     {#var rmcol <138>;#var rmsym <138>  /<088>};
                    #case {"mist"}          {#var rmcol <178>;#var rmsym <178>~ ~<088>};
                    #case {"moon"}          {#var rmcol <248>;#var rmsym <248> * <088>};
        #case {"gory"}      {#var rmcol <238>;#var rmsym {}};
                    #case {"mountain_cyan"}     {#var rmcol <268>;#var rmsym <268>A A<088>};
                    #case {"ocean"}         {#var rmcol <148>;#var rmsym <148>~ ~<088>};
                    #case {"ocean2"}        {#var rmcol <148>;#var rmsym <148>~ ^<088>};
                    #case {"ocean3"}        {#var rmcol <148>;#var rmsym <148>^ ~<088>};
                    #case {"ocean4"}        {#var rmcol <148>;#var rmsym <148>, ~<088>};
                    #case {"office"}        {#var rmcol <238>;#var rmsym <238>[ ]<088>};
                    #case {"palace_room"}       {#var rmcol <138>;#var rmsym <138>[ ]<088>};
                    #case {"pillar"}        {#var rmcol <278>;#var rmsym <278> * <088>};
                    #case {"plain"}         {#var rmcol <238>;#var rmsym <238>, `<088>};
                    #case {"quicksand"}     {#var rmcol <138>;#var rmsym <138>%%%<088>};
                    #case {"rain"}          {#var rmcol <148>;#var rmsym <148>'.'<088>};
                    #case {"rainbow"}       {#var rmcol <148>;#var rmsym <118>)<138>)<148>)<088>};
                    #case {"redcarpet"}     {#var rmcol <118>;#var rmsym <118>. .<088>};
        #case {"rzeka"}         {#var rmcol <148>;#var rmsym {}};
        #case {"trakt"}          {#var rmcol <278>;#var rmsym {}};
                    #case {"road_crossroads"}   {#var rmcol <278>;#var rmsym <278>-+-<088>};
                    #case {"road_eastwest"}     {#var rmcol <278>;#var rmsym <278>- -<088>};
        #case {"skaly"}         {#var rmcol <238>;#var rmsym {}};
                    #case {"ruins"}         {#var rmcol <178>;#var rmsym <178>{<148>*<178>}<088>};
                    #case {"ship"}          {#var rmcol <238>;#var rmsym <238>V_V<088>};
        #case {"brzeg"}         {#var rmcol <268>;#var rmsym {}};
                    #case {"shop"}          {#var rmcol <138>;#var rmsym <138>*<128>$<138>*<088>};
                    #case {"smallroad"}     {#var rmcol <278>;#var rmsym <228>,<278>|<228>`<088>};
                    #case {"smallroad_ew"}      {#var rmcol <278>;#var rmsym <278>---<088>};
                    #case {"snow"}          {#var rmcol <178>;#var rmsym <178>. ,<088>};
                    #case {"space1"}        {#var rmcol <108>;#var rmsym <208>[ ]<088>};
                    #case {"underground"}       {#var rmcol <148>;#var rmsym <148>. .<088>};
                    #case {"underwater"}        {#var rmcol <248>;#var rmsym <248>~ ~<088>};
                    #case {"vertical_shaft"}    {#var rmcol <278>;#var rmsym <278>< ><088>};
                    #case {"volcano"}       {#var rmcol <218>;#var rmsym <218>A A<088>};
                    #case {"waterswim"}     {#var rmcol <148>;#var rmsym <148>~ ~<088>};
                    #case {"waternoswim"}       {#var rmcol <148>;#var rmsym <148>~ ~<088>};
                    #case {"well"}          {#var rmcol <238>;#var rmsym <238>(<148>~<238>)<088>};
                    #case {"wind1"}         {#var rmcol <168>;#var rmsym <168>~ ~<088>};
                    #case {"wind2"}         {#var rmcol <108>;#var rmsym <108>~-~<088>};
        #case {"zaulek"}           {#var rmcol {};#var rmsym {}};
        #case {"droga"}            {#var rmcol {};#var rmsym {};};
        #case {"sciezka"}          {#var rmcol <fca>;#var rmsym {}};
        #case {"chata"}            {#var rmcol <fca>;#var rmsym {}};
                    #case {"space2"}        {#var rmcol <278>;#var rmsym <278>*  <088>};
                    #case {"space3"}        {#var rmcol <278>;#var rmsym <278>  .<088>};
                    #case {"space4"}        {#var rmcol <108>;#var rmsym <208>[ ]<088>};
                    #case {"stairs"}        {#var rmcol <278>;#var rmsym <278>.@.<088>};
                    #case {"sun"}           {#var rmcol <138>;#var rmsym <138> * <088>};
        #case {"bagno"}         {#var rmcol <228>;#var rmsym {}};
                    #case {"swiatynia"}        {#var rmcol <268>;#var rmsym <268>{<178>+<268>}<088>};
                    #case {"tornado"}       {#var rmcol <108>;#var rmsym <108>.VV<088>};
                    #case {"trail_ew"}      {#var rmcol <238>;#var rmsym <238>. .<088>};
        #case {"tunel"}        {#var rmcol <238>;#var rmsym {}};
        #case {"osada"}        {#var rmcol <fca>;#var rmsym {}};
        #case {"wioska"}       {#var rmcol <118><fca>;#var rmsym {}};
        #case {"plac"}       {#var rmcol <118><fca>;#var rmsym {}};        
    };

    #if {"$rmcol" != ""} {
        #map set roomcolor $rmcol;
        #var rc $rmcol;
        #line substitute variables {#map exit w color $rc;#map exit e color $rc;#map exit n color $rc;#map exit sw color $rc;#map exit se color $rc;#map exit s color $rc;#map exit ne color $rc;#map exit nw color $rc;#map set roomsymbol {}};
    };
    #map set roomsymbol $rmsym;
} {1};

